{"ast":null,"code":"var _jsxFileName = \"/Users/benbavar/litrit/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport { /* React, */useState } from 'react';\n\n// const menuBar = document.getElementById('overlay');\n// const menuIcon = document.getElementById('menu-icon');\n// const menu = document.getElementById('menu');\n// const loginBar = document.getElementById('login-bar');\n\n// const iconBars = [...menuIcon.children];\n// const navbars = [menuBar, loginBar];\n// const menuItems = [...menu.children];\n// const opacifiables = [...navbars, ...menuItems];\n// const hidableLinks = document.querySelectorAll(\n//   '#menu > div > a, #login-bar > a'\n// );\n\n// const toggleableClass = new Map([\n//   [menu, 'hidden'],\n//   [menuIcon, 'x-ified'],\n// ]);\n// [...opacifiables, ...hidableLinks].forEach((elem) =>\n//   toggleableClass.set(elem, opacifiables.includes(elem) ? 'opaque' : 'active')\n// );\n\n// const toggleClass = (state, elem) => {\n//   const classes = elem.classList;\n//   if (classes.contains(state)) classes.remove(state);\n//   else classes.add(state);\n// };\n\n// const sleepThenRestyle = (opacity) => {\n//   setTimeout(() => {\n//     iconBars[1].style.opacity = opacity;\n//   }, 200);\n//   setTimeout(() => {\n//     toggleableClass.forEach(toggleClass);\n//   }, 50);\n// };\n\n// const opacify = (elem, riseLen) =>\n//   elem.animate(\n//     [\n//       { opacity: 0, transform: `translateY(${riseLen}px)` },\n//       { opacity: 1, transform: 'translateY(0)' },\n//     ],\n//     250\n//   );\n\n// const turn = (bar, turnDirection) =>\n//   bar.animate(\n//     [\n//       { transform: 'rotate(0) translateY(0)' },\n//       {\n//         transform: `rotate(calc(${turnDirection} * 45deg)) translateY(calc(${\n//           -1 * turnDirection\n//         } * 16.5px))`,\n//       },\n//     ],\n//     250\n//   );\n\n// const animations = [];\n// const toggleMenu = () => {\n//   if (animations.length) {\n//     animations.forEach((animation) => animation.reverse());\n//   } else {\n//     [\n//       turn(iconBars[0], -1),\n//       iconBars[1].animate([{ opacity: 1 }, { opacity: 0 }], 200),\n//       turn(iconBars[2], 1),\n//     ].forEach((animation) => animations.push(animation));\n//     for (let elem of opacifiables)\n//       animations.push(opacify(elem, navbars.includes(elem) ? 0 : -5));\n//   }\n\n//   sleepThenRestyle(menu.classList.contains('hidden') ? 0 : 1);\n// };\n\n/****************************************************************************/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overlay = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"overlay\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n_c = Overlay;\nconst MenuIcon = props => {\n  // alert(props.xified);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"menu-icon\",\n    className: props.xified ? 'x-ified' : '',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MenuIcon;\nconst MenuBar = () => {\n  _s();\n  const [xified, setXified] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"menu-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Overlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {\n      onClick: () => {\n        alert('before');\n        setXified(true);\n        alert('after');\n      },\n      xified: xified\n      // onClick={() => {\n      //   const menuBar = document.getElementById('overlay');\n      //   const menuIcon = document.getElementById('menu-icon');\n      //   const menu = document.getElementById('menu');\n      //   const loginBar = document.getElementById('login-bar');\n\n      //   const iconBars = [...menuIcon.children];\n      //   const navbars = [menuBar, loginBar];\n      //   const menuItems = [...menu.children];\n      //   const opacifiables = [...navbars, ...menuItems];\n      //   const hidableLinks = document.querySelectorAll(\n      //     '#menu > div > a, #login-bar > a'\n      //   );\n\n      //   const toggleableClass = new Map([\n      //     [menu, 'hidden'],\n      //     [menuIcon, 'x-ified'],\n      //   ]);\n      //   [...opacifiables, ...hidableLinks].forEach((elem) =>\n      //     toggleableClass.set(\n      //       elem,\n      //       opacifiables.includes(elem) ? 'opaque' : 'active'\n      //     )\n      //   );\n\n      //   const toggleClass = (state, elem) => {\n      //     const classes = elem.classList;\n      //     if (classes.contains(state)) classes.remove(state);\n      //     else classes.add(state);\n      //   };\n\n      //   const sleepThenRestyle = (opacity) => {\n      //     setTimeout(() => {\n      //       iconBars[1].style.opacity = opacity;\n      //     }, 200);\n      //     setTimeout(() => {\n      //       toggleableClass.forEach(toggleClass);\n      //     }, 50);\n      //   };\n\n      //   const opacify = (elem, riseLen) =>\n      //     elem.animate(\n      //       [\n      //         { opacity: 0, transform: `translateY(${riseLen}px)` },\n      //         { opacity: 1, transform: 'translateY(0)' },\n      //       ],\n      //       250\n      //     );\n\n      //   const turn = (bar, turnDirection) =>\n      //     bar.animate(\n      //       [\n      //         { transform: 'rotate(0) translateY(0)' },\n      //         {\n      //           transform: `rotate(calc(${turnDirection} * 45deg)) translateY(calc(${\n      //             -1 * turnDirection\n      //           } * 16.5px))`,\n      //         },\n      //       ],\n      //       250\n      //     );\n\n      //   const animations = [];\n      //   const toggleMenu = () => {\n      //     if (animations.length) {\n      //       animations.forEach((animation) => animation.reverse());\n      //     } else {\n      //       [\n      //         turn(iconBars[0], -1),\n      //         iconBars[1].animate([{ opacity: 1 }, { opacity: 0 }], 200),\n      //         turn(iconBars[2], 1),\n      //       ].forEach((animation) => animations.push(animation));\n      //       for (let elem of opacifiables)\n      //         animations.push(opacify(elem, navbars.includes(elem) ? 0 : -5));\n      //     }\n\n      //     sleepThenRestyle(menu.classList.contains('hidden') ? 0 : 1);\n      //   };\n\n      //   toggleMenu();\n      // }}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuBar, \"rtqpqQUcIrrN7XDnmBoDywgHgVQ=\");\n_c3 = MenuBar;\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"menu\",\n      className: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"catalog.html\",\n          children: \"Catalog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"pricing.html\",\n          children: \"Pricing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"login-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"login.html\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"start.html\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Start free trial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"../animations.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Home;\nexport default Home;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Overlay\");\n$RefreshReg$(_c2, \"MenuIcon\");\n$RefreshReg$(_c3, \"MenuBar\");\n$RefreshReg$(_c4, \"Home\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Overlay","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuIcon","props","className","xified","children","style","cursor","_c2","MenuBar","_s","setXified","onClick","alert","_c3","Home","href","src","_c4","$RefreshReg$"],"sources":["/Users/benbavar/litrit/src/pages/Home.js"],"sourcesContent":["import { /* React, */ useState } from 'react';\n\n// const menuBar = document.getElementById('overlay');\n// const menuIcon = document.getElementById('menu-icon');\n// const menu = document.getElementById('menu');\n// const loginBar = document.getElementById('login-bar');\n\n// const iconBars = [...menuIcon.children];\n// const navbars = [menuBar, loginBar];\n// const menuItems = [...menu.children];\n// const opacifiables = [...navbars, ...menuItems];\n// const hidableLinks = document.querySelectorAll(\n//   '#menu > div > a, #login-bar > a'\n// );\n\n// const toggleableClass = new Map([\n//   [menu, 'hidden'],\n//   [menuIcon, 'x-ified'],\n// ]);\n// [...opacifiables, ...hidableLinks].forEach((elem) =>\n//   toggleableClass.set(elem, opacifiables.includes(elem) ? 'opaque' : 'active')\n// );\n\n// const toggleClass = (state, elem) => {\n//   const classes = elem.classList;\n//   if (classes.contains(state)) classes.remove(state);\n//   else classes.add(state);\n// };\n\n// const sleepThenRestyle = (opacity) => {\n//   setTimeout(() => {\n//     iconBars[1].style.opacity = opacity;\n//   }, 200);\n//   setTimeout(() => {\n//     toggleableClass.forEach(toggleClass);\n//   }, 50);\n// };\n\n// const opacify = (elem, riseLen) =>\n//   elem.animate(\n//     [\n//       { opacity: 0, transform: `translateY(${riseLen}px)` },\n//       { opacity: 1, transform: 'translateY(0)' },\n//     ],\n//     250\n//   );\n\n// const turn = (bar, turnDirection) =>\n//   bar.animate(\n//     [\n//       { transform: 'rotate(0) translateY(0)' },\n//       {\n//         transform: `rotate(calc(${turnDirection} * 45deg)) translateY(calc(${\n//           -1 * turnDirection\n//         } * 16.5px))`,\n//       },\n//     ],\n//     250\n//   );\n\n// const animations = [];\n// const toggleMenu = () => {\n//   if (animations.length) {\n//     animations.forEach((animation) => animation.reverse());\n//   } else {\n//     [\n//       turn(iconBars[0], -1),\n//       iconBars[1].animate([{ opacity: 1 }, { opacity: 0 }], 200),\n//       turn(iconBars[2], 1),\n//     ].forEach((animation) => animations.push(animation));\n//     for (let elem of opacifiables)\n//       animations.push(opacify(elem, navbars.includes(elem) ? 0 : -5));\n//   }\n\n//   sleepThenRestyle(menu.classList.contains('hidden') ? 0 : 1);\n// };\n\n/****************************************************************************/\n\nconst Overlay = () => {\n  return <div id='overlay'></div>;\n};\n\nconst MenuIcon = (props) => {\n  // alert(props.xified);\n\n  return (\n    <div id='menu-icon' className={props.xified ? 'x-ified' : ''}>\n      <div style={{ cursor: 'pointer' }}></div>\n      <div></div>\n      <div style={{ cursor: 'pointer' }}></div>\n    </div>\n  );\n};\n\nconst MenuBar = () => {\n  const [xified, setXified] = useState(false);\n\n  return (\n    <div id='menu-bar'>\n      <Overlay />\n      <MenuIcon\n        onClick={() => {\n          alert('before');\n          setXified(true);\n          alert('after');\n        }}\n        xified={xified}\n        // onClick={() => {\n        //   const menuBar = document.getElementById('overlay');\n        //   const menuIcon = document.getElementById('menu-icon');\n        //   const menu = document.getElementById('menu');\n        //   const loginBar = document.getElementById('login-bar');\n\n        //   const iconBars = [...menuIcon.children];\n        //   const navbars = [menuBar, loginBar];\n        //   const menuItems = [...menu.children];\n        //   const opacifiables = [...navbars, ...menuItems];\n        //   const hidableLinks = document.querySelectorAll(\n        //     '#menu > div > a, #login-bar > a'\n        //   );\n\n        //   const toggleableClass = new Map([\n        //     [menu, 'hidden'],\n        //     [menuIcon, 'x-ified'],\n        //   ]);\n        //   [...opacifiables, ...hidableLinks].forEach((elem) =>\n        //     toggleableClass.set(\n        //       elem,\n        //       opacifiables.includes(elem) ? 'opaque' : 'active'\n        //     )\n        //   );\n\n        //   const toggleClass = (state, elem) => {\n        //     const classes = elem.classList;\n        //     if (classes.contains(state)) classes.remove(state);\n        //     else classes.add(state);\n        //   };\n\n        //   const sleepThenRestyle = (opacity) => {\n        //     setTimeout(() => {\n        //       iconBars[1].style.opacity = opacity;\n        //     }, 200);\n        //     setTimeout(() => {\n        //       toggleableClass.forEach(toggleClass);\n        //     }, 50);\n        //   };\n\n        //   const opacify = (elem, riseLen) =>\n        //     elem.animate(\n        //       [\n        //         { opacity: 0, transform: `translateY(${riseLen}px)` },\n        //         { opacity: 1, transform: 'translateY(0)' },\n        //       ],\n        //       250\n        //     );\n\n        //   const turn = (bar, turnDirection) =>\n        //     bar.animate(\n        //       [\n        //         { transform: 'rotate(0) translateY(0)' },\n        //         {\n        //           transform: `rotate(calc(${turnDirection} * 45deg)) translateY(calc(${\n        //             -1 * turnDirection\n        //           } * 16.5px))`,\n        //         },\n        //       ],\n        //       250\n        //     );\n\n        //   const animations = [];\n        //   const toggleMenu = () => {\n        //     if (animations.length) {\n        //       animations.forEach((animation) => animation.reverse());\n        //     } else {\n        //       [\n        //         turn(iconBars[0], -1),\n        //         iconBars[1].animate([{ opacity: 1 }, { opacity: 0 }], 200),\n        //         turn(iconBars[2], 1),\n        //       ].forEach((animation) => animations.push(animation));\n        //       for (let elem of opacifiables)\n        //         animations.push(opacify(elem, navbars.includes(elem) ? 0 : -5));\n        //     }\n\n        //     sleepThenRestyle(menu.classList.contains('hidden') ? 0 : 1);\n        //   };\n\n        //   toggleMenu();\n        // }}\n      />\n    </div>\n  );\n};\n\nconst Home = () => {\n  return (\n    <div>\n      <MenuBar />\n      <div id='menu' className='hidden'>\n        <div>\n          <a href='catalog.html'>Catalog</a>\n        </div>\n        <div>\n          <a href='pricing.html'>Pricing</a>\n        </div>\n      </div>\n      <div id='login-bar'>\n        <a href='login.html'>\n          <button>Sign in</button>\n        </a>\n        <a href='start.html'>\n          <button>Start free trial</button>\n        </a>\n      </div>\n      <script src='../animations.js'></script>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}