{"ast":null,"code":"var _jsxFileName = \"/Users/benbavar/jcbenny/src/components/ProfileMaker.js\",\n  _s = $RefreshSig$();\nimport { Route, Outlet } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Profile from '../pages/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet profileRoutes, setProfileRoutes;\nconst onfulfilled = async (res, nameDups, setNameDups, profileRoutes, setProfileRoutes /*nameDupArr, profileRouteArr*/) => {\n  // const [nameDups, setNameDups] = nameDupArr;\n  // let [profileRoutes, setProfileRoutes] = profileRouteArr;\n  console.log((await res.json()).Count);\n  // if (res.json().Count) {\n  //   let updatedNameDups = new Map();\n  //   console.log(`nameDups.size = ${nameDups.size}`);\n  //   if (nameDups.size)\n  //     for (let [name] of nameDups) {\n  //       //   console.log(`name = ${name}`);\n  //       updatedNameDups.set(name, nameDups.get(name));\n  //     }\n\n  //   // console.log(`res.data.Items.length = ${res.data.Items.length}`);\n  //   let i = 1;\n  //   for (let item of res.data.Items) {\n  //     const fullName = `${item['First name']} ${item['Last name']}`;\n\n  //     console.log(`${i++}: fullName = ${fullName}`);\n\n  //     if (nameDups.has(fullName)) {\n  //       console.log('nameDups.has(fullName) returns true');\n  //       console.log(`nameDups.get(fullName) = ${nameDups.get(fullName)}`);\n  //       updatedNameDups.set(fullName, nameDups.get(fullName) + 1);\n  //       console.log(\n  //         `updatedNameDups.get(fullName) = ${updatedNameDups.get(fullName)}`\n  //       );\n  //     } else updatedNameDups.set(fullName, 1);\n\n  //     // setNameDups(updatedNameDups); // This line causes all the issues\n\n  //     // console.log(`nameDups.size = ${nameDups.size}`);\n  //   }\n\n  //   // console.log('AT END OF onfulfilled');\n  //   // for (let [name] of updatedNameDups) {\n  //   //   console.log(`name = ${name}`);\n  //   //   console.log(`updatedNameDups.get(name) = ${updatedNameDups.get(name)}`);\n  //   // }\n\n  //   // for (let [name] of updatedNameDups)\n  //   //   nameDups.set(name, updatedNameDups.get(name));\n  //   setNameDups(updatedNameDups);\n  // }\n\n  // for (let [name] of nameDups) {\n  //   // console.log(`name = ${name}`);\n  //   let nameInPath = name.toLowerCase();\n  //   for (let i = 0; i < nameInPath.length; i++)\n  //     if (nameInPath[i] === ' ') nameInPath[i] = '-';\n\n  //   if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n\n  //   setProfileRoutes([\n  //     ...profileRoutes,\n  //     <Route\n  //       path={`/profile/${nameInPath}`}\n  //       element={<Profile nameOfUser={name} />}\n  //     />,\n  //   ]);\n  // }\n};\n\nconst ProfileMaker = () => {\n  _s();\n  console.log('top of ProfileMaker');\n  const [nameDups, setNameDups] = useState(new Map());\n  [profileRoutes, setProfileRoutes] = useState([]);\n  // const nameDupArr = [nameDups, setNameDups];\n  // const profileRouteArr = [profileRoutes, setProfileRoutes];\n\n  // axios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(\n  //   (res) =>\n  //     onfulfilled(\n  //       res,\n  //       nameDups,\n  //       setNameDups,\n  //       profileRoutes,\n  //       setProfileRoutes /*nameDupArr, profileRouteArr*/\n  //     ),\n  //   (error) => console.log(error)\n  // );\n  fetch('https://weak-puce-toad-garb.cyclic.app/names-of-users', {\n    method: 'GET'\n  }).then(res => onfulfilled(res, nameDups, setNameDups, profileRoutes, setProfileRoutes /*nameDupArr, profileRouteArr*/), error => console.log(error));\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n};\n_s(ProfileMaker, \"hQJXcmXufquaAFcyze6hoMl24H0=\");\n_c = ProfileMaker;\nexport { ProfileMaker, profileRoutes };\nvar _c;\n$RefreshReg$(_c, \"ProfileMaker\");","map":{"version":3,"names":["Route","Outlet","useState","axios","Profile","jsxDEV","_jsxDEV","profileRoutes","setProfileRoutes","onfulfilled","res","nameDups","setNameDups","console","log","json","Count","ProfileMaker","_s","Map","fetch","method","then","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benbavar/jcbenny/src/components/ProfileMaker.js"],"sourcesContent":["import { Route, Outlet } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nimport Profile from '../pages/Profile';\nlet profileRoutes, setProfileRoutes;\n\nconst onfulfilled = async (\n  res,\n  nameDups,\n  setNameDups,\n  profileRoutes,\n  setProfileRoutes /*nameDupArr, profileRouteArr*/\n) => {\n  // const [nameDups, setNameDups] = nameDupArr;\n  // let [profileRoutes, setProfileRoutes] = profileRouteArr;\n  console.log((await res.json()).Count);\n  // if (res.json().Count) {\n  //   let updatedNameDups = new Map();\n  //   console.log(`nameDups.size = ${nameDups.size}`);\n  //   if (nameDups.size)\n  //     for (let [name] of nameDups) {\n  //       //   console.log(`name = ${name}`);\n  //       updatedNameDups.set(name, nameDups.get(name));\n  //     }\n\n  //   // console.log(`res.data.Items.length = ${res.data.Items.length}`);\n  //   let i = 1;\n  //   for (let item of res.data.Items) {\n  //     const fullName = `${item['First name']} ${item['Last name']}`;\n\n  //     console.log(`${i++}: fullName = ${fullName}`);\n\n  //     if (nameDups.has(fullName)) {\n  //       console.log('nameDups.has(fullName) returns true');\n  //       console.log(`nameDups.get(fullName) = ${nameDups.get(fullName)}`);\n  //       updatedNameDups.set(fullName, nameDups.get(fullName) + 1);\n  //       console.log(\n  //         `updatedNameDups.get(fullName) = ${updatedNameDups.get(fullName)}`\n  //       );\n  //     } else updatedNameDups.set(fullName, 1);\n\n  //     // setNameDups(updatedNameDups); // This line causes all the issues\n\n  //     // console.log(`nameDups.size = ${nameDups.size}`);\n  //   }\n\n  //   // console.log('AT END OF onfulfilled');\n  //   // for (let [name] of updatedNameDups) {\n  //   //   console.log(`name = ${name}`);\n  //   //   console.log(`updatedNameDups.get(name) = ${updatedNameDups.get(name)}`);\n  //   // }\n\n  //   // for (let [name] of updatedNameDups)\n  //   //   nameDups.set(name, updatedNameDups.get(name));\n  //   setNameDups(updatedNameDups);\n  // }\n\n  // for (let [name] of nameDups) {\n  //   // console.log(`name = ${name}`);\n  //   let nameInPath = name.toLowerCase();\n  //   for (let i = 0; i < nameInPath.length; i++)\n  //     if (nameInPath[i] === ' ') nameInPath[i] = '-';\n\n  //   if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n\n  //   setProfileRoutes([\n  //     ...profileRoutes,\n  //     <Route\n  //       path={`/profile/${nameInPath}`}\n  //       element={<Profile nameOfUser={name} />}\n  //     />,\n  //   ]);\n  // }\n};\n\nconst ProfileMaker = () => {\n  console.log('top of ProfileMaker');\n\n  const [nameDups, setNameDups] = useState(new Map());\n  [profileRoutes, setProfileRoutes] = useState([]);\n  // const nameDupArr = [nameDups, setNameDups];\n  // const profileRouteArr = [profileRoutes, setProfileRoutes];\n\n  // axios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(\n  //   (res) =>\n  //     onfulfilled(\n  //       res,\n  //       nameDups,\n  //       setNameDups,\n  //       profileRoutes,\n  //       setProfileRoutes /*nameDupArr, profileRouteArr*/\n  //     ),\n  //   (error) => console.log(error)\n  // );\n  fetch('https://weak-puce-toad-garb.cyclic.app/names-of-users', {\n    method: 'GET',\n  }).then(\n    (res) =>\n      onfulfilled(\n        res,\n        nameDups,\n        setNameDups,\n        profileRoutes,\n        setProfileRoutes /*nameDupArr, profileRouteArr*/\n      ),\n    (error) => console.log(error)\n  );\n\n  return <Outlet />;\n};\n\nexport { ProfileMaker, profileRoutes };\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,IAAIC,aAAa,EAAEC,gBAAgB;AAEnC,MAAMC,WAAW,GAAG,MAAAA,CAClBC,GAAG,EACHC,QAAQ,EACRC,WAAW,EACXL,aAAa,EACbC,gBAAgB,CAAC,oCACd;EACH;EACA;EACAK,OAAO,CAACC,GAAG,CAAC,CAAC,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC,EAAEC,KAAK,CAAC;EACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzBL,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAElC,MAAM,CAACH,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAIiB,GAAG,CAAC,CAAC,CAAC;EACnD,CAACZ,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAkB,KAAK,CAAC,uDAAuD,EAAE;IAC7DC,MAAM,EAAE;EACV,CAAC,CAAC,CAACC,IAAI,CACJZ,GAAG,IACFD,WAAW,CACTC,GAAG,EACHC,QAAQ,EACRC,WAAW,EACXL,aAAa,EACbC,gBAAgB,CAAC,+BACnB,CAAC,EACFe,KAAK,IAAKV,OAAO,CAACC,GAAG,CAACS,KAAK,CAC9B,CAAC;EAED,oBAAOjB,OAAA,CAACL,MAAM;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACT,EAAA,CAlCID,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAoClB,SAASA,YAAY,EAAEV,aAAa;AAAG,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}