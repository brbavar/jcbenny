{"ast":null,"code":"var _jsxFileName = \"/Users/benbavar/jcbenny/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport App from './App.js';\nimport { Auth } from './components/Auth.js';\nimport Register from './pages/Register.js';\nimport { ProfileMaker, nameDups } from './components/ProfileMaker.js';\nimport { VerifyEmail } from './pages/VerifyEmail.js';\nimport { EmailVerification } from './pages/EmailVerification.js';\nimport Login from './pages/Login.js';\nimport Profile from './pages/Profile.js';\nimport Catalog from './pages/Catalog.js';\nimport Sell from './pages/Sell.js';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n// console.log(nameDups.size);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(names.length);\nlet profileRoutes = [];\nfor (let [name] of nameDups) {\n  let nameInPath = name.toLowerCase();\n  nameInPath = nameInPath.replaceAll(' ', '-');\n  if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n  console.log(nameInPath);\n  profileRoutes.push( /*#__PURE__*/_jsxDEV(Route, {\n    path: `/profile/${nameInPath}`,\n    element: /*#__PURE__*/_jsxDEV(Profile, {\n      nameOfUser: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/private\",\n        element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 41\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/private/sell-something\",\n          element: /*#__PURE__*/_jsxDEV(Sell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(ProfileMaker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 41\n        }, this),\n        children: profileRoutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/please-verify\",\n        element: /*#__PURE__*/_jsxDEV(VerifyEmail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/verify-email/:VerificationString\",\n        element: /*#__PURE__*/_jsxDEV(EmailVerification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shop\",\n        element: /*#__PURE__*/_jsxDEV(Catalog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      alert(`number of names = ${names.length}`);\n      alert(`length = ${profileRoutes.length}`);\n      for (let route of profileRoutes) alert(route.props.element.props.nameOfUser);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 3\n}, this));\n// profileRoutesPromise.then((profileRoutes) => {\n//   console.log('inside then');\n//   root.render(\n//     <React.StrictMode>\n//       <BrowserRouter>\n//         <Routes>\n//           <Route path='/private' element={<Auth />}>\n//             {/* <Route path='/private/profile' element={<Profile />} /> */}\n//             <Route path='/private/sell-something' element={<Sell />} />\n//           </Route>\n//           <Route path='/' element={<App />} />\n//           <Route path='/register' element={<Register />} />\n//           <Route path='/profile' element={<ProfileMaker />}>\n//             {profileRoutes}\n//           </Route>\n//           <Route path='/please-verify' element={<VerifyEmail />} />\n//           <Route\n//             path='/verify-email/:VerificationString'\n//             element={<EmailVerification />}\n//           />\n//           <Route path='/login' element={<Login />} />\n//           <Route path='/shop' element={<Catalog />} />\n//         </Routes>\n//       </BrowserRouter>\n//       <button\n//         onClick={() => {\n//           console.log(profileRoutes.length);\n//           // for (let route of profileRoutes) console.log(route);\n//         }}\n//       ></button>\n//     </React.StrictMode>\n//   );\n// });\n\n// root.render(\n//   <button\n//     onClick={() => {\n//       console.log(profileRoutes.length);\n//       // for (let route of profileRoutes) console.log(route);\n//     }}\n//   ></button>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Routes","Route","App","Auth","Register","ProfileMaker","nameDups","VerifyEmail","EmailVerification","Login","Profile","Catalog","Sell","reportWebVitals","jsxDEV","_jsxDEV","console","log","names","length","profileRoutes","name","nameInPath","toLowerCase","replaceAll","get","crypto","randomUUID","push","path","element","nameOfUser","fileName","_jsxFileName","lineNumber","columnNumber","root","createRoot","document","getElementById","render","StrictMode","children","onClick","alert","route","props"],"sources":["/Users/benbavar/jcbenny/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport App from './App.js';\nimport { Auth } from './components/Auth.js';\nimport Register from './pages/Register.js';\nimport { ProfileMaker, nameDups } from './components/ProfileMaker.js';\nimport { VerifyEmail } from './pages/VerifyEmail.js';\nimport { EmailVerification } from './pages/EmailVerification.js';\nimport Login from './pages/Login.js';\nimport Profile from './pages/Profile.js';\nimport Catalog from './pages/Catalog.js';\nimport Sell from './pages/Sell.js';\n\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\n// console.log(nameDups.size);\nconsole.log(names.length);\n\nlet profileRoutes = [];\nfor (let [name] of nameDups) {\n  let nameInPath = name.toLowerCase();\n  nameInPath = nameInPath.replaceAll(' ', '-');\n\n  if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n\n  console.log(nameInPath);\n\n  profileRoutes.push(\n    <Route\n      path={`/profile/${nameInPath}`}\n      element={<Profile nameOfUser={name} />}\n    />\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path='/private' element={<Auth />}>\n          {/* <Route path='/private/profile' element={<Profile />} /> */}\n          <Route path='/private/sell-something' element={<Sell />} />\n        </Route>\n        <Route path='/' element={<App />} />\n        <Route path='/register' element={<Register />} />\n        <Route path='/profile' element={<ProfileMaker />}>\n          {profileRoutes}\n        </Route>\n        <Route path='/please-verify' element={<VerifyEmail />} />\n        <Route\n          path='/verify-email/:VerificationString'\n          element={<EmailVerification />}\n        />\n        <Route path='/login' element={<Login />} />\n        <Route path='/shop' element={<Catalog />} />\n      </Routes>\n    </BrowserRouter>\n    <button\n      onClick={() => {\n        alert(`number of names = ${names.length}`);\n        alert(`length = ${profileRoutes.length}`);\n        for (let route of profileRoutes)\n          alert(route.props.element.props.nameOfUser);\n      }}\n    ></button>\n  </React.StrictMode>\n);\n// profileRoutesPromise.then((profileRoutes) => {\n//   console.log('inside then');\n//   root.render(\n//     <React.StrictMode>\n//       <BrowserRouter>\n//         <Routes>\n//           <Route path='/private' element={<Auth />}>\n//             {/* <Route path='/private/profile' element={<Profile />} /> */}\n//             <Route path='/private/sell-something' element={<Sell />} />\n//           </Route>\n//           <Route path='/' element={<App />} />\n//           <Route path='/register' element={<Register />} />\n//           <Route path='/profile' element={<ProfileMaker />}>\n//             {profileRoutes}\n//           </Route>\n//           <Route path='/please-verify' element={<VerifyEmail />} />\n//           <Route\n//             path='/verify-email/:VerificationString'\n//             element={<EmailVerification />}\n//           />\n//           <Route path='/login' element={<Login />} />\n//           <Route path='/shop' element={<Catalog />} />\n//         </Routes>\n//       </BrowserRouter>\n//       <button\n//         onClick={() => {\n//           console.log(profileRoutes.length);\n//           // for (let route of profileRoutes) console.log(route);\n//         }}\n//       ></button>\n//     </React.StrictMode>\n//   );\n// });\n\n// root.render(\n//   <button\n//     onClick={() => {\n//       console.log(profileRoutes.length);\n//       // for (let route of profileRoutes) console.log(route);\n//     }}\n//   ></button>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}