{"ast":null,"code":"var _jsxFileName = \"/Users/benbavar/jcbenny/src/components/ProfileMaker.js\";\nimport { Route, Outlet } from 'react-router-dom';\n// import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Profile from '../pages/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet profileRoutes;\nconst onfulfilled = async res => {\n  if (res.data.Count) {\n    const nameDups = new Map();\n    for (let item of res.data.Items) {\n      const fullName = `${item['First name']} ${item['Last name']}`;\n      if (nameDups.has(fullName)) nameDups.set(fullName, nameDups.get(fullName) + 1);else nameDups.set(fullName, 1);\n    }\n\n    // console.log('AT END OF onfulfilled');\n    // for (let [name] of updatedNameDups) {\n    //   console.log(`name = ${name}`);\n    //   console.log(`updatedNameDups.get(name) = ${updatedNameDups.get(name)}`);\n    // }\n\n    // for (let [name] of updatedNameDups)\n    //   nameDups.set(name, updatedNameDups.get(name));\n\n    // setNameDups(updatedNameDups);\n  }\n\n  // for (let [name] of nameDups) {\n  //   // console.log(`name = ${name}`);\n  //   let nameInPath = name.toLowerCase();\n  //   for (let i = 0; i < nameInPath.length; i++)\n  //     if (nameInPath[i] === ' ') nameInPath[i] = '-';\n\n  //   if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n\n  //   setProfileRoutes([\n  //     ...profileRoutes,\n  //     <Route\n  //       path={`/profile/${nameInPath}`}\n  //       element={<Profile nameOfUser={name} />}\n  //     />,\n  //   ]);\n  // }\n};\n\nconst ProfileMaker = () => {\n  console.log('top of ProfileMaker');\n\n  // const [nameDups, setNameDups] = useState(new Map());\n  // [profileRoutes, setProfileRoutes] = useState([]);\n\n  // const nameDupArr = [nameDups, setNameDups];\n  // const profileRouteArr = [profileRoutes, setProfileRoutes];\n\n  axios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(res => onfulfilled(res), error => console.log(error));\n\n  // useEffect(\n  //   () =>\n  //     axios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(\n  //       (res) =>\n  //         onfulfilled(\n  //           res,\n  //           nameDups,\n  //           setNameDups,\n  //           profileRoutes,\n  //           setProfileRoutes /*nameDupArr, profileRouteArr*/\n  //         ),\n  //       (error) => console.log(error)\n  //     ),\n  //   []\n  // );\n\n  // useEffect(\n  //   () =>\n  //     fetch('https://weak-puce-toad-garb.cyclic.app/names-of-users', {\n  //       method: 'GET',\n  //     }).then(\n  //       (res) =>\n  //         onfulfilled(\n  //           res,\n  //           nameDups,\n  //           setNameDups,\n  //           profileRoutes,\n  //           setProfileRoutes /*nameDupArr, profileRouteArr*/\n  //         ),\n  //       (error) => console.log(error)\n  //     ),\n  //   []\n  // );\n\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 10\n  }, this);\n};\n_c = ProfileMaker;\nexport { ProfileMaker, profileRoutes };\nvar _c;\n$RefreshReg$(_c, \"ProfileMaker\");","map":{"version":3,"names":["Route","Outlet","axios","Profile","jsxDEV","_jsxDEV","profileRoutes","onfulfilled","res","data","Count","nameDups","Map","item","Items","fullName","has","set","get","ProfileMaker","console","log","then","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benbavar/jcbenny/src/components/ProfileMaker.js"],"sourcesContent":["import { Route, Outlet } from 'react-router-dom';\n// import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Profile from '../pages/Profile';\nlet profileRoutes;\n\nconst onfulfilled = async (res) => {\n  if (res.data.Count) {\n    const nameDups = new Map();\n    for (let item of res.data.Items) {\n      const fullName = `${item['First name']} ${item['Last name']}`;\n      if (nameDups.has(fullName))\n        nameDups.set(fullName, nameDups.get(fullName) + 1);\n      else nameDups.set(fullName, 1);\n    }\n\n    // console.log('AT END OF onfulfilled');\n    // for (let [name] of updatedNameDups) {\n    //   console.log(`name = ${name}`);\n    //   console.log(`updatedNameDups.get(name) = ${updatedNameDups.get(name)}`);\n    // }\n\n    // for (let [name] of updatedNameDups)\n    //   nameDups.set(name, updatedNameDups.get(name));\n\n    // setNameDups(updatedNameDups);\n  }\n\n  // for (let [name] of nameDups) {\n  //   // console.log(`name = ${name}`);\n  //   let nameInPath = name.toLowerCase();\n  //   for (let i = 0; i < nameInPath.length; i++)\n  //     if (nameInPath[i] === ' ') nameInPath[i] = '-';\n\n  //   if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n\n  //   setProfileRoutes([\n  //     ...profileRoutes,\n  //     <Route\n  //       path={`/profile/${nameInPath}`}\n  //       element={<Profile nameOfUser={name} />}\n  //     />,\n  //   ]);\n  // }\n};\n\nconst ProfileMaker = () => {\n  console.log('top of ProfileMaker');\n\n  // const [nameDups, setNameDups] = useState(new Map());\n  // [profileRoutes, setProfileRoutes] = useState([]);\n\n  // const nameDupArr = [nameDups, setNameDups];\n  // const profileRouteArr = [profileRoutes, setProfileRoutes];\n\n  axios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(\n    (res) => onfulfilled(res),\n    (error) => console.log(error)\n  );\n\n  // useEffect(\n  //   () =>\n  //     axios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(\n  //       (res) =>\n  //         onfulfilled(\n  //           res,\n  //           nameDups,\n  //           setNameDups,\n  //           profileRoutes,\n  //           setProfileRoutes /*nameDupArr, profileRouteArr*/\n  //         ),\n  //       (error) => console.log(error)\n  //     ),\n  //   []\n  // );\n\n  // useEffect(\n  //   () =>\n  //     fetch('https://weak-puce-toad-garb.cyclic.app/names-of-users', {\n  //       method: 'GET',\n  //     }).then(\n  //       (res) =>\n  //         onfulfilled(\n  //           res,\n  //           nameDups,\n  //           setNameDups,\n  //           profileRoutes,\n  //           setProfileRoutes /*nameDupArr, profileRouteArr*/\n  //         ),\n  //       (error) => console.log(error)\n  //     ),\n  //   []\n  // );\n\n  return <Outlet />;\n};\n\nexport { ProfileMaker, profileRoutes };\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD;AACA,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,IAAIC,aAAa;AAEjB,MAAMC,WAAW,GAAG,MAAOC,GAAG,IAAK;EACjC,IAAIA,GAAG,CAACC,IAAI,CAACC,KAAK,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC1B,KAAK,IAAIC,IAAI,IAAIL,GAAG,CAACC,IAAI,CAACK,KAAK,EAAE;MAC/B,MAAMC,QAAQ,GAAI,GAAEF,IAAI,CAAC,YAAY,CAAE,IAAGA,IAAI,CAAC,WAAW,CAAE,EAAC;MAC7D,IAAIF,QAAQ,CAACK,GAAG,CAACD,QAAQ,CAAC,EACxBJ,QAAQ,CAACM,GAAG,CAACF,QAAQ,EAAEJ,QAAQ,CAACO,GAAG,CAACH,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAChDJ,QAAQ,CAACM,GAAG,CAACF,QAAQ,EAAE,CAAC,CAAC;IAChC;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;EACF;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;EACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;EAElC;EACA;;EAEA;EACA;;EAEAnB,KAAK,CAACgB,GAAG,CAAC,uDAAuD,CAAC,CAACI,IAAI,CACpEd,GAAG,IAAKD,WAAW,CAACC,GAAG,CAAC,EACxBe,KAAK,IAAKH,OAAO,CAACC,GAAG,CAACE,KAAK,CAC9B,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAOlB,OAAA,CAACJ,MAAM;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACC,EAAA,GAjDIT,YAAY;AAmDlB,SAASA,YAAY,EAAEb,aAAa;AAAG,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}