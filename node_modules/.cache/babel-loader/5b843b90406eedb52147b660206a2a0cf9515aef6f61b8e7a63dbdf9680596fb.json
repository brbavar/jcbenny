{"ast":null,"code":"import { scanDatabase } from './scanDatabase';\nconst nameDups = new Map();\nscanDatabase('/names-of-users', {\n  params: {\n    expressionAttributeNames: {\n      '#FN': 'First name',\n      '#LN': 'Last name'\n    }\n  }\n}).then(namesOfUsers => {\n  for (let name of namesOfUsers) {\n    const fullName = `${name['First name']} ${name['Last name']}`;\n    if (nameDups.has(fullName)) nameDups.set(fullName, nameDups.get(fullName) + 1);else nameDups.set(fullName, 1);\n  }\n});\nexport { nameDups };","map":{"version":3,"names":["scanDatabase","nameDups","Map","params","expressionAttributeNames","then","namesOfUsers","name","fullName","has","set","get"],"sources":["/Users/benbavar/jcbenny/src/lib/getNameDups.js"],"sourcesContent":["import { scanDatabase } from './scanDatabase';\n\nconst nameDups = new Map();\n\nscanDatabase('/names-of-users', {\n  params: {\n    expressionAttributeNames: { '#FN': 'First name', '#LN': 'Last name' },\n  },\n}).then((namesOfUsers) => {\n  for (let name of namesOfUsers) {\n    const fullName = `${name['First name']} ${name['Last name']}`;\n    if (nameDups.has(fullName))\n      nameDups.set(fullName, nameDups.get(fullName) + 1);\n    else nameDups.set(fullName, 1);\n  }\n});\n\nexport { nameDups };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;AAE1BF,YAAY,CAAC,iBAAiB,EAAE;EAC9BG,MAAM,EAAE;IACNC,wBAAwB,EAAE;MAAE,KAAK,EAAE,YAAY;MAAE,KAAK,EAAE;IAAY;EACtE;AACF,CAAC,CAAC,CAACC,IAAI,CAAEC,YAAY,IAAK;EACxB,KAAK,IAAIC,IAAI,IAAID,YAAY,EAAE;IAC7B,MAAME,QAAQ,GAAI,GAAED,IAAI,CAAC,YAAY,CAAE,IAAGA,IAAI,CAAC,WAAW,CAAE,EAAC;IAC7D,IAAIN,QAAQ,CAACQ,GAAG,CAACD,QAAQ,CAAC,EACxBP,QAAQ,CAACS,GAAG,CAACF,QAAQ,EAAEP,QAAQ,CAACU,GAAG,CAACH,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAChDP,QAAQ,CAACS,GAAG,CAACF,QAAQ,EAAE,CAAC,CAAC;EAChC;AACF,CAAC,CAAC;AAEF,SAASP,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}