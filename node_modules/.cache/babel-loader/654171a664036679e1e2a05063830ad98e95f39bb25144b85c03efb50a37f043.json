{"ast":null,"code":"var _jsxFileName = \"/Users/benbavar/jcbenny/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport App from './App.js';\nimport { Auth } from './components/Auth.js';\nimport Register from './pages/Register.js';\nimport { ProfileMaker, nameDups, toGetNames } from './components/ProfileMaker.js';\nimport { VerifyEmail } from './pages/VerifyEmail.js';\nimport { EmailVerification } from './pages/EmailVerification.js';\nimport Login from './pages/Login.js';\nimport Profile from './pages/Profile.js';\nimport Catalog from './pages/Catalog.js';\nimport Sell from './pages/Sell.js';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet profileRoutes = [];\ntoGetNames.then(() => {\n  for (let [name] of nameDups) {\n    let nameInPath = name.toLowerCase();\n    nameInPath = nameInPath.replaceAll(' ', '-');\n    if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n    console.log(nameInPath);\n    profileRoutes.push( /*#__PURE__*/_jsxDEV(Route, {\n      path: `/profile/${nameInPath}`,\n      element: /*#__PURE__*/_jsxDEV(Profile, {\n        nameOfUser: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this));\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/private\",\n          element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 43\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/private/sell-something\",\n            element: /*#__PURE__*/_jsxDEV(Sell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(ProfileMaker, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 43\n          }, this),\n          children: profileRoutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/please-verify\",\n          element: /*#__PURE__*/_jsxDEV(VerifyEmail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/verify-email/:VerificationString\",\n          element: /*#__PURE__*/_jsxDEV(EmailVerification, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          element: /*#__PURE__*/_jsxDEV(Catalog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        alert(`number of names = ${nameDups.size}`);\n        alert(`length = ${profileRoutes.length}`);\n        for (let route of profileRoutes) alert(route.props.element.props.nameOfUser);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this));\n});\n\n// profileRoutesPromise.then((profileRoutes) => {\n//   console.log('inside then');\n//   root.render(\n//     <React.StrictMode>\n//       <BrowserRouter>\n//         <Routes>\n//           <Route path='/private' element={<Auth />}>\n//             {/* <Route path='/private/profile' element={<Profile />} /> */}\n//             <Route path='/private/sell-something' element={<Sell />} />\n//           </Route>\n//           <Route path='/' element={<App />} />\n//           <Route path='/register' element={<Register />} />\n//           <Route path='/profile' element={<ProfileMaker />}>\n//             {profileRoutes}\n//           </Route>\n//           <Route path='/please-verify' element={<VerifyEmail />} />\n//           <Route\n//             path='/verify-email/:VerificationString'\n//             element={<EmailVerification />}\n//           />\n//           <Route path='/login' element={<Login />} />\n//           <Route path='/shop' element={<Catalog />} />\n//         </Routes>\n//       </BrowserRouter>\n//       <button\n//         onClick={() => {\n//           console.log(profileRoutes.length);\n//           // for (let route of profileRoutes) console.log(route);\n//         }}\n//       ></button>\n//     </React.StrictMode>\n//   );\n// });\n\n// root.render(\n//   <button\n//     onClick={() => {\n//       console.log(profileRoutes.length);\n//       // for (let route of profileRoutes) console.log(route);\n//     }}\n//   ></button>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Routes","Route","App","Auth","Register","ProfileMaker","nameDups","toGetNames","VerifyEmail","EmailVerification","Login","Profile","Catalog","Sell","reportWebVitals","jsxDEV","_jsxDEV","profileRoutes","then","name","nameInPath","toLowerCase","replaceAll","get","crypto","randomUUID","console","log","push","path","element","nameOfUser","fileName","_jsxFileName","lineNumber","columnNumber","root","createRoot","document","getElementById","render","StrictMode","children","onClick","alert","size","length","route","props"],"sources":["/Users/benbavar/jcbenny/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport App from './App.js';\nimport { Auth } from './components/Auth.js';\nimport Register from './pages/Register.js';\nimport {\n  ProfileMaker,\n  nameDups,\n  toGetNames,\n} from './components/ProfileMaker.js';\nimport { VerifyEmail } from './pages/VerifyEmail.js';\nimport { EmailVerification } from './pages/EmailVerification.js';\nimport Login from './pages/Login.js';\nimport Profile from './pages/Profile.js';\nimport Catalog from './pages/Catalog.js';\nimport Sell from './pages/Sell.js';\n\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nlet profileRoutes = [];\ntoGetNames.then(() => {\n  for (let [name] of nameDups) {\n    let nameInPath = name.toLowerCase();\n    nameInPath = nameInPath.replaceAll(' ', '-');\n\n    if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n\n    console.log(nameInPath);\n\n    profileRoutes.push(\n      <Route\n        path={`/profile/${nameInPath}`}\n        element={<Profile nameOfUser={name} />}\n      />\n    );\n  }\n\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(\n    <React.StrictMode>\n      <BrowserRouter>\n        <Routes>\n          <Route path='/private' element={<Auth />}>\n            {/* <Route path='/private/profile' element={<Profile />} /> */}\n            <Route path='/private/sell-something' element={<Sell />} />\n          </Route>\n          <Route path='/' element={<App />} />\n          <Route path='/register' element={<Register />} />\n          <Route path='/profile' element={<ProfileMaker />}>\n            {profileRoutes}\n          </Route>\n          <Route path='/please-verify' element={<VerifyEmail />} />\n          <Route\n            path='/verify-email/:VerificationString'\n            element={<EmailVerification />}\n          />\n          <Route path='/login' element={<Login />} />\n          <Route path='/shop' element={<Catalog />} />\n        </Routes>\n      </BrowserRouter>\n      <button\n        onClick={() => {\n          alert(`number of names = ${nameDups.size}`);\n          alert(`length = ${profileRoutes.length}`);\n          for (let route of profileRoutes)\n            alert(route.props.element.props.nameOfUser);\n        }}\n      ></button>\n    </React.StrictMode>\n  );\n});\n\n// profileRoutesPromise.then((profileRoutes) => {\n//   console.log('inside then');\n//   root.render(\n//     <React.StrictMode>\n//       <BrowserRouter>\n//         <Routes>\n//           <Route path='/private' element={<Auth />}>\n//             {/* <Route path='/private/profile' element={<Profile />} /> */}\n//             <Route path='/private/sell-something' element={<Sell />} />\n//           </Route>\n//           <Route path='/' element={<App />} />\n//           <Route path='/register' element={<Register />} />\n//           <Route path='/profile' element={<ProfileMaker />}>\n//             {profileRoutes}\n//           </Route>\n//           <Route path='/please-verify' element={<VerifyEmail />} />\n//           <Route\n//             path='/verify-email/:VerificationString'\n//             element={<EmailVerification />}\n//           />\n//           <Route path='/login' element={<Login />} />\n//           <Route path='/shop' element={<Catalog />} />\n//         </Routes>\n//       </BrowserRouter>\n//       <button\n//         onClick={() => {\n//           console.log(profileRoutes.length);\n//           // for (let route of profileRoutes) console.log(route);\n//         }}\n//       ></button>\n//     </React.StrictMode>\n//   );\n// });\n\n// root.render(\n//   <button\n//     onClick={() => {\n//       console.log(profileRoutes.length);\n//       // for (let route of profileRoutes) console.log(route);\n//     }}\n//   ></button>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}