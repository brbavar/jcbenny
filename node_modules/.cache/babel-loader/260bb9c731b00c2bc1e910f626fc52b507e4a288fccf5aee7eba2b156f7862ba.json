{"ast":null,"code":"var _jsxFileName = \"/Users/benbavar/jcbenny/src/components/ProfileMaker.js\",\n  _s = $RefreshSig$();\nimport { Route, Outlet } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Profile from '../pages/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet profileRoutes, setProfileRoutes;\nconst onfulfilled = (res, nameDupArr, profileRouteArr) => {\n  const [nameDups, setNameDups] = nameDupArr;\n  let [profileRoutes, setProfileRoutes] = profileRouteArr;\n  if (res.data.Count) {\n    let updatedNameDups = new Map();\n    console.log(`nameDups.size = ${nameDups.size}`);\n    // if (nameDups.size)\n    //   for (let [name] of nameDups) {\n    //     //   console.log(`name = ${name}`);\n    //     updatedNameDups.set(name, nameDups.get(name));\n    //   }\n\n    console.log(`res.data.Items.length = ${res.data.Items.length}`);\n    // let i = 1;\n    // for (let item of res.data.Items) {\n    //   const fullName = `${item['First name']} ${item['Last name']}`;\n\n    //   console.log(`${i++}: fullName = ${fullName}`);\n\n    //   // if (updatedNameDups.has(fullName))\n    //   //   updatedNameDups.set(fullName, updatedNameDups.get(fullName) + 1);\n    //   // // This line causes the \"read-only\" error\n    //   // else updatedNameDups.set(fullName, 1);\n\n    //   setNameDups(updatedNameDups);\n    //   // console.log(`nameDups.size = ${nameDups.size}`);\n    // }\n  }\n\n  // for (let [name] of nameDups) {\n  //   // console.log(`name = ${name}`);\n  //   let nameInPath = name.toLowerCase();\n  //   for (let i = 0; i < nameInPath.length; i++)\n  //     if (nameInPath[i] === ' ') nameInPath[i] = '-';\n\n  //   if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n\n  //   setProfileRoutes([\n  //     ...profileRoutes,\n  //     <Route\n  //       path={`/profile/${nameInPath}`}\n  //       element={<Profile nameOfUser={name} />}\n  //     />,\n  //   ]);\n  // }\n};\n\nconst ProfileMaker = () => {\n  _s();\n  console.log('top of ProfileMaker');\n  const [nameDups, setNameDups] = useState(new Map());\n  [profileRoutes, setProfileRoutes] = useState([]);\n  const nameDupArr = [nameDups, setNameDups];\n  const profileRouteArr = [profileRoutes, setProfileRoutes];\n  axios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(res => onfulfilled(res, nameDupArr, profileRouteArr)).catch(error => console.log(error));\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n};\n_s(ProfileMaker, \"hQJXcmXufquaAFcyze6hoMl24H0=\");\n_c = ProfileMaker;\nexport { ProfileMaker, profileRoutes };\nvar _c;\n$RefreshReg$(_c, \"ProfileMaker\");","map":{"version":3,"names":["Route","Outlet","useState","axios","Profile","jsxDEV","_jsxDEV","profileRoutes","setProfileRoutes","onfulfilled","res","nameDupArr","profileRouteArr","nameDups","setNameDups","data","Count","updatedNameDups","Map","console","log","size","Items","length","ProfileMaker","_s","get","then","catch","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benbavar/jcbenny/src/components/ProfileMaker.js"],"sourcesContent":["import { Route, Outlet } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nimport Profile from '../pages/Profile';\nlet profileRoutes, setProfileRoutes;\n\nconst onfulfilled = (res, nameDupArr, profileRouteArr) => {\n  const [nameDups, setNameDups] = nameDupArr;\n  let [profileRoutes, setProfileRoutes] = profileRouteArr;\n\n  if (res.data.Count) {\n    let updatedNameDups = new Map();\n    console.log(`nameDups.size = ${nameDups.size}`);\n    // if (nameDups.size)\n    //   for (let [name] of nameDups) {\n    //     //   console.log(`name = ${name}`);\n    //     updatedNameDups.set(name, nameDups.get(name));\n    //   }\n\n    console.log(`res.data.Items.length = ${res.data.Items.length}`);\n    // let i = 1;\n    // for (let item of res.data.Items) {\n    //   const fullName = `${item['First name']} ${item['Last name']}`;\n\n    //   console.log(`${i++}: fullName = ${fullName}`);\n\n    //   // if (updatedNameDups.has(fullName))\n    //   //   updatedNameDups.set(fullName, updatedNameDups.get(fullName) + 1);\n    //   // // This line causes the \"read-only\" error\n    //   // else updatedNameDups.set(fullName, 1);\n\n    //   setNameDups(updatedNameDups);\n    //   // console.log(`nameDups.size = ${nameDups.size}`);\n    // }\n  }\n\n  // for (let [name] of nameDups) {\n  //   // console.log(`name = ${name}`);\n  //   let nameInPath = name.toLowerCase();\n  //   for (let i = 0; i < nameInPath.length; i++)\n  //     if (nameInPath[i] === ' ') nameInPath[i] = '-';\n\n  //   if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n\n  //   setProfileRoutes([\n  //     ...profileRoutes,\n  //     <Route\n  //       path={`/profile/${nameInPath}`}\n  //       element={<Profile nameOfUser={name} />}\n  //     />,\n  //   ]);\n  // }\n};\n\nconst ProfileMaker = () => {\n  console.log('top of ProfileMaker');\n\n  const [nameDups, setNameDups] = useState(new Map());\n  [profileRoutes, setProfileRoutes] = useState([]);\n  const nameDupArr = [nameDups, setNameDups];\n  const profileRouteArr = [profileRoutes, setProfileRoutes];\n\n  axios\n    .get('https://weak-puce-toad-garb.cyclic.app/names-of-users')\n    .then((res) => onfulfilled(res, nameDupArr, profileRouteArr))\n    .catch((error) => console.log(error));\n\n  return <Outlet />;\n};\n\nexport { ProfileMaker, profileRoutes };\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,IAAIC,aAAa,EAAEC,gBAAgB;AAEnC,MAAMC,WAAW,GAAGA,CAACC,GAAG,EAAEC,UAAU,EAAEC,eAAe,KAAK;EACxD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,UAAU;EAC1C,IAAI,CAACJ,aAAa,EAAEC,gBAAgB,CAAC,GAAGI,eAAe;EAEvD,IAAIF,GAAG,CAACK,IAAI,CAACC,KAAK,EAAE;IAClB,IAAIC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC/BC,OAAO,CAACC,GAAG,CAAE,mBAAkBP,QAAQ,CAACQ,IAAK,EAAC,CAAC;IAC/C;IACA;IACA;IACA;IACA;;IAEAF,OAAO,CAACC,GAAG,CAAE,2BAA0BV,GAAG,CAACK,IAAI,CAACO,KAAK,CAACC,MAAO,EAAC,CAAC;IAC/D;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;EACF;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzBN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAElC,MAAM,CAACP,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAIgB,GAAG,CAAC,CAAC,CAAC;EACnD,CAACX,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMS,UAAU,GAAG,CAACE,QAAQ,EAAEC,WAAW,CAAC;EAC1C,MAAMF,eAAe,GAAG,CAACL,aAAa,EAAEC,gBAAgB,CAAC;EAEzDL,KAAK,CACFuB,GAAG,CAAC,uDAAuD,CAAC,CAC5DC,IAAI,CAAEjB,GAAG,IAAKD,WAAW,CAACC,GAAG,EAAEC,UAAU,EAAEC,eAAe,CAAC,CAAC,CAC5DgB,KAAK,CAAEC,KAAK,IAAKV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC,CAAC;EAEvC,oBAAOvB,OAAA,CAACL,MAAM;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACR,EAAA,CAdID,YAAY;AAAAU,EAAA,GAAZV,YAAY;AAgBlB,SAASA,YAAY,EAAEjB,aAAa;AAAG,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}