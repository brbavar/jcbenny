{"ast":null,"code":"var _jsxFileName = \"/Users/benbavar/jcbenny/src/components/ProfileMaker.js\";\nimport { Outlet } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nameDups = new Map();\nconst onfulfilled = async res => {\n  if (res.data.Count) {\n    for (let item of res.data.Items) {\n      const fullName = `${item['First name']} ${item['Last name']}`;\n      if (nameDups.has(fullName)) nameDups.set(fullName, nameDups.get(fullName) + 1);else nameDups.set(fullName, 1);\n    }\n  }\n};\nlet toGetNames = new Promise(() => null, error => console.log(error));\naxios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(res => onfulfilled(res), error => console.log(error));\nconst ProfileMaker = () => {\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_c = ProfileMaker;\nexport { ProfileMaker, nameDups, toGetNames };\nvar _c;\n$RefreshReg$(_c, \"ProfileMaker\");","map":{"version":3,"names":["Outlet","axios","jsxDEV","_jsxDEV","nameDups","Map","onfulfilled","res","data","Count","item","Items","fullName","has","set","get","toGetNames","Promise","error","console","log","then","ProfileMaker","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benbavar/jcbenny/src/components/ProfileMaker.js"],"sourcesContent":["import { Outlet } from 'react-router-dom';\nimport axios from 'axios';\n\nconst nameDups = new Map();\n\nconst onfulfilled = async (res) => {\n  if (res.data.Count) {\n    for (let item of res.data.Items) {\n      const fullName = `${item['First name']} ${item['Last name']}`;\n      if (nameDups.has(fullName))\n        nameDups.set(fullName, nameDups.get(fullName) + 1);\n      else nameDups.set(fullName, 1);\n    }\n  }\n};\n\nlet toGetNames = new Promise(\n  () => null,\n  (error) => console.log(error)\n);\naxios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(\n  (res) => onfulfilled(res),\n  (error) => console.log(error)\n);\n\nconst ProfileMaker = () => {\n  return <Outlet />;\n};\n\nexport { ProfileMaker, nameDups, toGetNames };\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;AAE1B,MAAMC,WAAW,GAAG,MAAOC,GAAG,IAAK;EACjC,IAAIA,GAAG,CAACC,IAAI,CAACC,KAAK,EAAE;IAClB,KAAK,IAAIC,IAAI,IAAIH,GAAG,CAACC,IAAI,CAACG,KAAK,EAAE;MAC/B,MAAMC,QAAQ,GAAI,GAAEF,IAAI,CAAC,YAAY,CAAE,IAAGA,IAAI,CAAC,WAAW,CAAE,EAAC;MAC7D,IAAIN,QAAQ,CAACS,GAAG,CAACD,QAAQ,CAAC,EACxBR,QAAQ,CAACU,GAAG,CAACF,QAAQ,EAAER,QAAQ,CAACW,GAAG,CAACH,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAChDR,QAAQ,CAACU,GAAG,CAACF,QAAQ,EAAE,CAAC,CAAC;IAChC;EACF;AACF,CAAC;AAED,IAAII,UAAU,GAAG,IAAIC,OAAO,CAC1B,MAAM,IAAI,EACTC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAC9B,CAAC;AACDjB,KAAK,CAACc,GAAG,CAAC,uDAAuD,CAAC,CAACM,IAAI,CACpEd,GAAG,IAAKD,WAAW,CAACC,GAAG,CAAC,EACxBW,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAC9B,CAAC;AAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;EACzB,oBAAOnB,OAAA,CAACH,MAAM;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACC,EAAA,GAFIL,YAAY;AAIlB,SAASA,YAAY,EAAElB,QAAQ,EAAEY,UAAU;AAAG,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}