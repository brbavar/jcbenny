{"ast":null,"code":"var _jsxFileName = \"/Users/benbavar/jcbenny/src/components/ProfileMaker.js\",\n  _s = $RefreshSig$();\nimport { Route, Outlet } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Profile from '../pages/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet profileRoutes, setProfileRoutes;\nconst onfulfilled = (res, nameDupArr, profileRouteArr) => {\n  const [nameDups, setNameDups] = nameDupArr;\n  let [profileRoutes, setProfileRoutes] = profileRouteArr;\n  if (res.data.Count) {\n    let updatedNameDups = new Map();\n    if (nameDups.size) for (let [name] of nameDups) {\n      //   console.log(`name = ${name}`);\n      updatedNameDups.set(name, nameDups.get(name));\n    }\n    for (let item of res.data.Items) {\n      const fullName = `${item['First name']} ${item['Last name']}`;\n\n      //   console.log(`fullName = ${fullName}`);\n\n      if (updatedNameDups.has(fullName)) updatedNameDups.set(fullName, updatedNameDups.get(fullName) + 1);\n      // This line causes the \"read-only\" error\n      else updatedNameDups.set(fullName, 1);\n      setNameDups(updatedNameDups);\n    }\n  }\n  for (let [name] of nameDups) {\n    // console.log(`name = ${name}`);\n    let nameInPath = name.toLowerCase();\n    for (let i = 0; i < nameInPath.length; i++) if (nameInPath[i] === ' ') nameInPath[i] = '-';\n    if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n    console.log(`nameInPath = ${nameInPath}`);\n    setProfileRoutes([...profileRoutes, /*#__PURE__*/_jsxDEV(Route, {\n      path: `/profile/${nameInPath}`,\n      element: /*#__PURE__*/_jsxDEV(Profile, {\n        nameOfUser: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]);\n  }\n};\nconst ProfileMaker = () => {\n  _s();\n  console.log('top of ProfileMaker');\n  const [nameDups, setNameDups] = useState(new Map());\n  [profileRoutes, setProfileRoutes] = useState([]);\n  const nameDupArr = [nameDups, setNameDups];\n  const profileRouteArr = [profileRoutes, setProfileRoutes];\n  axios.get('https://weak-puce-toad-garb.cyclic.app/names-of-users').then(res => onfulfilled(res, nameDupArr, profileRouteArr)).catch(error => console.log(error));\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n};\n_s(ProfileMaker, \"hQJXcmXufquaAFcyze6hoMl24H0=\");\n_c = ProfileMaker;\nexport { ProfileMaker, profileRoutes };\nvar _c;\n$RefreshReg$(_c, \"ProfileMaker\");","map":{"version":3,"names":["Route","Outlet","useState","axios","Profile","jsxDEV","_jsxDEV","profileRoutes","setProfileRoutes","onfulfilled","res","nameDupArr","profileRouteArr","nameDups","setNameDups","data","Count","updatedNameDups","Map","size","name","set","get","item","Items","fullName","has","nameInPath","toLowerCase","i","length","crypto","randomUUID","console","log","path","element","nameOfUser","fileName","_jsxFileName","lineNumber","columnNumber","ProfileMaker","_s","then","catch","error","_c","$RefreshReg$"],"sources":["/Users/benbavar/jcbenny/src/components/ProfileMaker.js"],"sourcesContent":["import { Route, Outlet } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nimport Profile from '../pages/Profile';\nlet profileRoutes, setProfileRoutes;\n\nconst onfulfilled = (res, nameDupArr, profileRouteArr) => {\n  const [nameDups, setNameDups] = nameDupArr;\n  let [profileRoutes, setProfileRoutes] = profileRouteArr;\n\n  if (res.data.Count) {\n    let updatedNameDups = new Map();\n    if (nameDups.size)\n      for (let [name] of nameDups) {\n        //   console.log(`name = ${name}`);\n        updatedNameDups.set(name, nameDups.get(name));\n      }\n\n    for (let item of res.data.Items) {\n      const fullName = `${item['First name']} ${item['Last name']}`;\n\n      //   console.log(`fullName = ${fullName}`);\n\n      if (updatedNameDups.has(fullName))\n        updatedNameDups.set(fullName, updatedNameDups.get(fullName) + 1);\n      // This line causes the \"read-only\" error\n      else updatedNameDups.set(fullName, 1);\n\n      setNameDups(updatedNameDups);\n    }\n  }\n\n  for (let [name] of nameDups) {\n    // console.log(`name = ${name}`);\n    let nameInPath = name.toLowerCase();\n    for (let i = 0; i < nameInPath.length; i++)\n      if (nameInPath[i] === ' ') nameInPath[i] = '-';\n\n    if (nameDups.get(name) > 1) nameInPath += `-${crypto.randomUUID()}`;\n\n    console.log(`nameInPath = ${nameInPath}`);\n\n    setProfileRoutes([\n      ...profileRoutes,\n      <Route\n        path={`/profile/${nameInPath}`}\n        element={<Profile nameOfUser={name} />}\n      />,\n    ]);\n  }\n};\n\nconst ProfileMaker = () => {\n  console.log('top of ProfileMaker');\n\n  const [nameDups, setNameDups] = useState(new Map());\n  [profileRoutes, setProfileRoutes] = useState([]);\n  const nameDupArr = [nameDups, setNameDups];\n  const profileRouteArr = [profileRoutes, setProfileRoutes];\n\n  axios\n    .get('https://weak-puce-toad-garb.cyclic.app/names-of-users')\n    .then((res) => onfulfilled(res, nameDupArr, profileRouteArr))\n    .catch((error) => console.log(error));\n\n  return <Outlet />;\n};\n\nexport { ProfileMaker, profileRoutes };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}